[tool.poetry]
name = "ndf"
version = "0.1.0"
description = ""
authors = ["Marc 'risson' Schmitt <marc.schmitt@prologin.org>", "Association Prologin <info@prologin.org>"]
license = "AGPL-3.0"

[[tool.poetry.source]]
name = "gitlab-prologin"
url = "https://gitlab.com/api/v4/groups/1331525/-/packages/pypi/simple"
priority = "supplemental"

[tool.poetry.dependencies]
python = "^3.10"
coverage = { version = "*", extras = [ "toml" ] }
django = "^4.0"
django-auditlog = { git = "https://github.com/jazzband/django-auditlog.git" }
django-auto-prefetch = "^1.4.0"
django-fsm = "^2.8"
django-localflavor = "^3.1"
django-model-utils = "^4.3"
gunicorn = "^20.1"
ipython = "*"
prologin-django-utils = { version = "0.7.2", extras = ["auth"] }
prospector = {extras = ["with_everything"], version = "*"}
psycopg2 = "^2.9"
pypdf = "^3.2"
python-magic = "^0.4"

[tool.poetry.dev-dependencies]
black = "*"
isort = "*"
pre-commit = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
omit = [
    "../*migrations*",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    # Re-enable the standard pragma
    "pragma: nocover",

    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",

    # Don't complain about missing debug-only code:
    "def __repr__",

    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.black]
line-length = 79

[tool.isort]
profile = "black"
line_length = 79
